From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Matti=20Lehtim=C3=A4ki?= <matti.lehtimaki@gmail.com>
Date: Thu, 9 Feb 2017 21:48:19 +0200
Subject: [PATCH] (hybris) Disable SELinux

Change-Id: I0511b2a0de1b20996f4fb8e9f3569acb41e2cf0f
---
 init/property_service.cpp |  2 ++
 init/selinux.cpp          |  3 +++
 init/service.cpp          | 10 +++++++++-
 3 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/init/property_service.cpp b/init/property_service.cpp
index e95a80d231f379d387212abe79d56fff74af58e0..252682342c4810e646a78b065b0581196fac100a 100644
--- a/init/property_service.cpp
+++ b/init/property_service.cpp
@@ -113,6 +113,8 @@ void property_init() {
 }
 static bool CheckMacPerms(const std::string& name, const char* target_context,
                           const char* source_context, const ucred& cr) {
+    // Disable permission check in Mer
+    return true;
     if (!target_context || !source_context) {
         return false;
     }
diff --git a/init/selinux.cpp b/init/selinux.cpp
index 0ba5c4ae3860d6d0d81e9a149827a76fd46a4458..416c1278904709ba982497a01191835c24fca737 100644
--- a/init/selinux.cpp
+++ b/init/selinux.cpp
@@ -382,6 +382,9 @@ bool LoadPolicy() {
 }  // namespace
 
 void SelinuxInitialize() {
+    // Disable in Mer
+    return;
+
     Timer t;
 
     LOG(INFO) << "Loading SELinux policy";
diff --git a/init/service.cpp b/init/service.cpp
index c9cd5213bb9710510e7e13ea15c23ce8fd072681..5a041868bae2e6ab251bd44d3ea0b8205adf783c 100644
--- a/init/service.cpp
+++ b/init/service.cpp
@@ -66,6 +66,8 @@ using android::base::WriteStringToFile;
 namespace android {
 namespace init {
 
+// Disable SELinux
+/*
 static Result<std::string> ComputeContextFromExecutable(const std::string& service_path) {
     std::string computed_context;
 
@@ -106,6 +108,7 @@ static Result<std::string> ComputeContextFromExecutable(const std::string& servi
     }
     return computed_context;
 }
+*/
 
 Result<Success> Service::SetUpMountNamespace() const {
     constexpr unsigned int kSafeFlags = MS_NODEV | MS_NOEXEC | MS_NOSUID;
@@ -314,11 +317,14 @@ void Service::SetProcessAttributes() {
             PLOG(FATAL) << "setuid failed for " << name_;
         }
     }
+// Disable SELinux
+/*
     if (!seclabel_.empty()) {
         if (setexeccon(seclabel_.c_str()) < 0) {
             PLOG(FATAL) << "cannot setexeccon('" << seclabel_ << "') for " << name_;
         }
     }
+*/
     if (priority_ != 0) {
         if (setpriority(PRIO_PROCESS, 0, priority_) != 0) {
             PLOG(FATAL) << "setpriority failed for " << name_;
@@ -829,6 +835,8 @@ Result<Success> Service::Start() {
     }
 
     std::string scon;
+// Disable SELinux
+/*
     if (!seclabel_.empty()) {
         scon = seclabel_;
     } else {
@@ -838,7 +846,7 @@ Result<Success> Service::Start() {
         }
         scon = *result;
     }
-
+*/
     LOG(INFO) << "starting service '" << name_ << "'...";
 
     pid_t pid = -1;
